<Window x:Class="ColorRampGenerator.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:vm="clr-namespace:ColorRampGenerator.ViewModels"
        xmlns:conv="clr-namespace:ColorRampGenerator.Converters"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        mc:Ignorable="d"
        Title="Color Ramp Generator" Height="800" Width="810" MinHeight="800" MinWidth="810"
        d:DataContext="{d:DesignInstance vm:MainViewModel, IsDesignTimeCreatable=true}">
    <Window.Resources>
        <conv:IntToRadioBoolConverter x:Key="IntToRadioBoolConverter"/>
        <conv:IntToSignedStringConverter x:Key="IntToSignedStringConverter"/>
        <conv:EnumToRadioBoolConverter x:Key="EnumToRadioBoolConverter"/>
        <conv:BoolInverterConverter x:Key="BoolInverterConverter"/>
    </Window.Resources>
    
    <Grid>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="300" Width="Auto"/><!-- Ramp List -->
            <ColumnDefinition Width="10"/><!-- Separator -->
            <ColumnDefinition Width="*"/><!-- Ramp Settings -->
        </Grid.ColumnDefinitions>
        
        <!-- Ramp List -->
        <DockPanel Grid.Column="0" Margin="10,0,0,10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Button DockPanel.Dock="Bottom" Margin="4,2,4,4" Content="Copy to clipboard" Height="Auto" Command="{Binding CopyCommand}"/>
            <Button DockPanel.Dock="Bottom" Margin="4,0,2,4" Content="Add New" Height="Auto" Command="{Binding AddColorRampCommand}"/>
            <GroupBox DockPanel.Dock="Top" Margin="0,0,0,10" Header="Ramp List">
                <ListBox HorizontalContentAlignment="Stretch"
                         ItemsSource="{Binding ColorRamps}"
                         SelectedItem="{Binding SelectedColorRamp, Mode=TwoWay}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <DockPanel>
                                <Button Content="X" Width="30" Height="30" Margin="10,0,0,0" DockPanel.Dock="Right"
                                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.RemoveColorRampCommand}"
                                        CommandParameter="{Binding}"/>
                                <ItemsControl DockPanel.Dock="Left" AlternationCount="100" HorizontalContentAlignment="Stretch" ItemsSource="{Binding Colors}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <UniformGrid Columns="{Binding Colors.Count}" Rows="1" VerticalAlignment="Stretch"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style>
                                            <Setter Property="Grid.Column" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentPresenter}, Path=(ItemsControl.AlternationIndex)}"/>
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Canvas Height="30" Background="{Binding Brush}"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </DockPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </GroupBox>
        </DockPanel>
        
        <!-- Separator -->
        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,10,0,10" Background="Transparent"/>
        
        <!-- Ramp Settings -->
        <DockPanel Grid.Column="2" Margin="0,0,10,10">
            
            <!-- Base Color -->
            <GroupBox Header="Base Color" DockPanel.Dock="Top">
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="30"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    
                    <Border Grid.Column="0" Grid.Row="0" Grid.RowSpan="3" BorderThickness="2" BorderBrush="Black">
                        <Canvas Width="100" Height="100" Background="{Binding SelectedColorRamp.BaseColor.Brush}"/>
                    </Border>
                    
                    <Slider Grid.Column="1" Grid.Row="0" Minimum="0" Maximum="360" Margin="5" VerticalAlignment="Center"
                            Value="{Binding SelectedColorRamp.BaseColor.Hue}"/>
                    <Slider Grid.Column="1" Grid.Row="1" Minimum="0" Maximum="100" Margin="5" VerticalAlignment="Center"
                            Value="{Binding SelectedColorRamp.BaseColor.Saturation}"/>
                    <Slider Grid.Column="1" Grid.Row="2" Minimum="0" Maximum="100" Margin="5" VerticalAlignment="Center"
                            Value="{Binding SelectedColorRamp.BaseColor.Brightness}"/>
                    
                    <TextBox Grid.Column="2" Grid.Row="0" TextAlignment="Center" VerticalContentAlignment="Center"
                             Text="{Binding SelectedColorRamp.BaseColor.Hue, Mode=TwoWay}"
                             KeyUp="TextBox_KeyEnterUpdate"/>
                    <TextBox Grid.Column="2" Grid.Row="1" TextAlignment="Center" VerticalContentAlignment="Center"
                             Text="{Binding SelectedColorRamp.BaseColor.Saturation, Mode=TwoWay}"
                             KeyUp="TextBox_KeyEnterUpdate"/>
                    <TextBox Grid.Column="2" Grid.Row="2" TextAlignment="Center" VerticalContentAlignment="Center"
                             Text="{Binding SelectedColorRamp.BaseColor.Brightness, Mode=TwoWay}"
                             KeyUp="TextBox_KeyEnterUpdate"/>
                    
                    <Label Grid.Column="3" Grid.Row="0" Content="Hue" VerticalAlignment="Center"/>
                    <Label Grid.Column="3" Grid.Row="1" Content="Saturation" VerticalAlignment="Center"/>
                    <Label Grid.Column="3" Grid.Row="2" Content="Brightness" VerticalAlignment="Center"/>
                </Grid>
            </GroupBox>
            
            <!-- Ramp Size -->
            <GroupBox Header="Ramp Size" DockPanel.Dock="Top">
                <StackPanel Orientation="Horizontal">
                    <RadioButton Content="3" Margin="10" IsChecked="{Binding SelectedColorRamp.Size, Converter={StaticResource IntToRadioBoolConverter}, ConverterParameter=3}"/>
                    <RadioButton Content="5" Margin="10" IsChecked="{Binding SelectedColorRamp.Size, Converter={StaticResource IntToRadioBoolConverter}, ConverterParameter=5}"/>
                    <RadioButton Content="7" Margin="10" IsChecked="{Binding SelectedColorRamp.Size, Converter={StaticResource IntToRadioBoolConverter}, ConverterParameter=7}"/>
                    <RadioButton Content="9" Margin="10" IsChecked="{Binding SelectedColorRamp.Size, Converter={StaticResource IntToRadioBoolConverter}, ConverterParameter=9}"/>
                </StackPanel>
            </GroupBox>
            
            <!-- Hue Shift -->
            <GroupBox Header="Hue Shift" DockPanel.Dock="Top">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <RadioButton Content="Linear" IsChecked="{Binding SelectedColorRamp.CustomHueShifts, Converter={StaticResource BoolInverterConverter}}"/>
                        <RadioButton Content="Custom" IsChecked="{Binding SelectedColorRamp.CustomHueShifts}" Margin="10,0,0,0"/>
                    </StackPanel>
                    <DockPanel>
                        <DockPanel.Style>
                            <Style TargetType="DockPanel">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedColorRamp.CustomHueShifts}" Value="False">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DockPanel.Style>
                        <StackPanel DockPanel.Dock="Right" Orientation="Vertical">
                            <RadioButton Content="Same direction"
                                         IsChecked="{Binding SelectedColorRamp.GeneralHueShiftMode, Mode=TwoWay,
                                         Converter={StaticResource EnumToRadioBoolConverter}, ConverterParameter=SameDirection}"/>
                            <RadioButton Content="Opposite directions"
                                         IsChecked="{Binding SelectedColorRamp.GeneralHueShiftMode, Mode=TwoWay,
                                         Converter={StaticResource EnumToRadioBoolConverter}, ConverterParameter=OppositeDirections}"/>
                        </StackPanel>
                        <Slider DockPanel.Dock="Left" Minimum="-40" Maximum="40" Margin="5" VerticalAlignment="Stretch"
                                AutoToolTipPlacement="TopLeft"
                                AutoToolTipPrecision="0"
                                ToolTip="{Binding SelectedColorRamp.GeneralHueShift.Value}"
                                Value="{Binding SelectedColorRamp.GeneralHueShift.Value}"/>
                    </DockPanel>
                    <StackPanel Orientation="Horizontal" MinHeight="30">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedColorRamp.CustomHueShifts}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <ItemsControl AlternationCount="100" ItemsSource="{Binding SelectedColorRamp.HueShifts}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="{Binding SelectedColorRamp.HueShifts.Count}" Rows="1"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="Grid.Column" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentPresenter}, Path=(ItemsControl.AlternationIndex)}"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBox Width="35" VerticalContentAlignment="Center" TextAlignment="Center"
                                             Text="{Binding Value, Converter={StaticResource IntToSignedStringConverter}}"
                                             KeyUp="TextBox_KeyEnterUpdate"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            
            <!-- Saturation Shift -->
            <GroupBox Header="Saturation Shift" DockPanel.Dock="Top">
               <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <RadioButton Content="Linear" IsChecked="{Binding SelectedColorRamp.CustomSaturationShifts, Converter={StaticResource BoolInverterConverter}}"/>
                        <RadioButton Content="Custom" IsChecked="{Binding SelectedColorRamp.CustomSaturationShifts}" Margin="10,0,0,0"/>
                    </StackPanel>
                    <DockPanel>
                        <DockPanel.Style>
                            <Style TargetType="DockPanel">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedColorRamp.CustomSaturationShifts}" Value="False">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DockPanel.Style>
                        <StackPanel DockPanel.Dock="Right" Orientation="Vertical">
                            <RadioButton Content="Same direction"
                                         IsChecked="{Binding SelectedColorRamp.GeneralSaturationShiftMode, Mode=TwoWay,
                                         Converter={StaticResource EnumToRadioBoolConverter}, ConverterParameter=SameDirection}"/>
                            <RadioButton Content="Opposite directions"
                                         IsChecked="{Binding SelectedColorRamp.GeneralSaturationShiftMode, Mode=TwoWay,
                                         Converter={StaticResource EnumToRadioBoolConverter}, ConverterParameter=OppositeDirections}"/>
                        </StackPanel>
                        <Slider DockPanel.Dock="Left" Minimum="-40" Maximum="40" Margin="5" VerticalAlignment="Stretch"
                                AutoToolTipPlacement="TopLeft"
                                AutoToolTipPrecision="0"
                                ToolTip="{Binding SelectedColorRamp.GeneralSaturationShift.Value}"
                                Value="{Binding SelectedColorRamp.GeneralSaturationShift.Value}"/>
                    </DockPanel>
                    <StackPanel Orientation="Horizontal" MinHeight="30">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedColorRamp.CustomSaturationShifts}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <ItemsControl AlternationCount="100" ItemsSource="{Binding SelectedColorRamp.SaturationShifts}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="{Binding SelectedColorRamp.SaturationShifts.Count}" Rows="1"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="Grid.Column" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentPresenter}, Path=(ItemsControl.AlternationIndex)}"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBox Width="35" VerticalContentAlignment="Center" TextAlignment="Center"
                                             Text="{Binding Value, Converter={StaticResource IntToSignedStringConverter}}"
                                             KeyUp="TextBox_KeyEnterUpdate"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            
            <!-- Brightness Shift -->
            <GroupBox Header="Brightness Shift" DockPanel.Dock="Top">
               <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <RadioButton Content="Linear" IsChecked="{Binding SelectedColorRamp.CustomBrightnessShifts, Converter={StaticResource BoolInverterConverter}}"/>
                        <RadioButton Content="Custom" IsChecked="{Binding SelectedColorRamp.CustomBrightnessShifts}" Margin="10,0,0,0"/>
                    </StackPanel>
                    <DockPanel>
                        <DockPanel.Style>
                            <Style TargetType="DockPanel">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedColorRamp.CustomBrightnessShifts}" Value="False">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DockPanel.Style>
                        <StackPanel DockPanel.Dock="Right" Orientation="Vertical">
                            <RadioButton Content="Same direction"
                                         IsChecked="{Binding SelectedColorRamp.GeneralBrightnessShiftMode, Mode=TwoWay,
                                         Converter={StaticResource EnumToRadioBoolConverter}, ConverterParameter=SameDirection}"/>
                            <RadioButton Content="Opposite directions"
                                         IsChecked="{Binding SelectedColorRamp.GeneralBrightnessShiftMode, Mode=TwoWay,
                                         Converter={StaticResource EnumToRadioBoolConverter}, ConverterParameter=OppositeDirections}"/>
                        </StackPanel>
                        <Slider DockPanel.Dock="Left" Minimum="-40" Maximum="40" Margin="5" VerticalAlignment="Center"
                                AutoToolTipPlacement="TopLeft"
                                AutoToolTipPrecision="0"
                                ToolTip="{Binding SelectedColorRamp.GeneralBrightnessShift.Value}"
                                Value="{Binding SelectedColorRamp.GeneralBrightnessShift.Value}"/>
                    </DockPanel>
                    <StackPanel Orientation="Horizontal" MinHeight="30">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedColorRamp.CustomBrightnessShifts}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <ItemsControl AlternationCount="100" ItemsSource="{Binding SelectedColorRamp.BrightnessShifts}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="{Binding SelectedColorRamp.BrightnessShifts.Count}" Rows="1"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="Grid.Column" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentPresenter}, Path=(ItemsControl.AlternationIndex)}"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBox Width="35" VerticalContentAlignment="Center" TextAlignment="Center"
                                             Text="{Binding Value, Converter={StaticResource IntToSignedStringConverter}}"
                                             KeyUp="TextBox_KeyEnterUpdate"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            
            <!-- Chart -->
            <lvc:CartesianChart DockPanel.Dock="Top" Name="Chart" Series="{Binding SelectedColorRamp.SeriesCollection, Mode=OneWay}">
                <lvc:CartesianChart.AxisX>
                    <lvc:Axis MinValue="0" MaxValue="360" Title="Hue">
                        <lvc:Axis.Separator>
                            <lvc:Separator IsEnabled="True" Step="72"/>
                        </lvc:Axis.Separator>
                    </lvc:Axis>
                </lvc:CartesianChart.AxisX>
                <lvc:CartesianChart.AxisY>
                    <lvc:Axis MinValue="0" MaxValue="100" Title="Brightness" Position="RightTop">
                        <lvc:Axis.Separator>
                            <lvc:Separator IsEnabled="True" Step="20"/>
                        </lvc:Axis.Separator>
                    </lvc:Axis>
                </lvc:CartesianChart.AxisY>  
            </lvc:CartesianChart>
            
        </DockPanel>
        
    </Grid>
</Window>
